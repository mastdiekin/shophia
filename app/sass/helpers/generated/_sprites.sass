// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$americanexpress-name: 'americanexpress'
$americanexpress-x: 0px
$americanexpress-y: 14px
$americanexpress-offset-x: 0px
$americanexpress-offset-y: -14px
$americanexpress-width: 20px
$americanexpress-height: 20px
$americanexpress-total-width: 53px
$americanexpress-total-height: 34px
$americanexpress-image: '../images/sprite.png'
$americanexpress: (0px, 14px, 0px, -14px, 20px, 20px, 53px, 34px, '../images/sprite.png', 'americanexpress', )
$discover-name: 'discover'
$discover-x: 0px
$discover-y: 0px
$discover-offset-x: 0px
$discover-offset-y: 0px
$discover-width: 29px
$discover-height: 14px
$discover-total-width: 53px
$discover-total-height: 34px
$discover-image: '../images/sprite.png'
$discover: (0px, 0px, 0px, 0px, 29px, 14px, 53px, 34px, '../images/sprite.png', 'discover', )
$mastercard-name: 'mastercard'
$mastercard-x: 29px
$mastercard-y: 0px
$mastercard-offset-x: -29px
$mastercard-offset-y: 0px
$mastercard-width: 24px
$mastercard-height: 14px
$mastercard-total-width: 53px
$mastercard-total-height: 34px
$mastercard-image: '../images/sprite.png'
$mastercard: (29px, 0px, -29px, 0px, 24px, 14px, 53px, 34px, '../images/sprite.png', 'mastercard', )
$visa-name: 'visa'
$visa-x: 29px
$visa-y: 14px
$visa-offset-x: -29px
$visa-offset-y: -14px
$visa-width: 20px
$visa-height: 6px
$visa-total-width: 53px
$visa-total-height: 34px
$visa-image: '../images/sprite.png'
$visa: (29px, 14px, -29px, -14px, 20px, 6px, 53px, 34px, '../images/sprite.png', 'visa', )
$spritesheet-width: 53px
$spritesheet-height: 34px
$spritesheet-image: '../images/sprite.png'
$spritesheet-sprites: ($americanexpress, $discover, $mastercard, $visa, )
$spritesheet: (53px, 34px, '../images/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
